buildscript {
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath 'nu.studer:gradle-jooq-plugin:3.0.3'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

plugins {
    id "org.flywaydb.flyway" version "7.3.2"
    id "distribution"
    id 'com.palantir.git-version' version '0.12.2'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'nu.studer.jooq'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.apache.poi:poi-ooxml:4.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'com.github.burst-apps-team:burstkit4j:b2e653c0d9'
    //implementation 'com.github.jjos2372:burstkit4j:35fbdae491'
    implementation 'org.nanohttpd:nanohttpd:2.3.1'
    implementation "org.flywaydb:flyway-core:6.5.0"
    implementation "com.h2database:h2:1.4.199"
    implementation "org.jooq:jooq"
    implementation "org.jooq:jooq-meta"
    implementation "org.jooq:jooq-codegen"
    implementation "org.apache.logging.log4j:log4j-api:2.11.2"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.11.2"
    implementation "org.slf4j:slf4j-api:1.7.26"
    implementation 'com.zaxxer:HikariCP:3.3.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation group: 'org.ehcache', name: 'ehcache', version: '3.7.1'

    // Needed for build script so "compile" needed
    compile "com.h2database:h2:1.4.197"
    jooqRuntime "com.h2database:h2:1.4.199"
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'
    compile group: 'com.h2database', name: 'h2', version: '1.4.199'
}

def schema_dburl =  "jdbc:h2:file:./jooq-schema;AUTO_SERVER=TRUE"
flyway {
    url = "${schema_dburl}"
    locations = ["filesystem:"+project.projectDir.toString()+"/src/main/resources/db/migration_h2"]
}

jooq {
    version = "3.11.9"
    edition = "OSS"
    burstPool(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = "${schema_dburl}"
        }
        generator {
            name = 'org.jooq.codegen.JavaGenerator'
            database {
                includes = ".*"
                name = "org.jooq.meta.h2.H2Database"
                inputSchema = 'PUBLIC'
                excludes = ''
            }
            target {
                packageName = "burst.pool.db"
                directory = "src/main/java"
            }
        }
    }
}

generateBurstPoolJooqSchemaSource.dependsOn flywayMigrate

def details = versionDetails()

task versionProp()  {
    doFirst {
        new File(sourceSets.main.output.resourcesDir, "/version.properties").text = "version:${details.lastTag}"
    }
}

task buildJar(dependsOn: shadowJar)

jar {
    manifest {
        attributes 'Main-Class': 'burst.pool.Launcher'
    }
}

distributions {
    main {
        distributionBaseName = "signum-pool-${details.lastTag}"
        contents {
            from 'dist/icon.ico'
            from 'dist/icon.png'
            from 'dist/pool.properties'
            from 'dist/logging.xml'
            from 'License'
            into('html') {
                from 'html'
            }
            from project.tasks.shadowJar.outputs.files
        }
    }
}
